#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParsetCrawler.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Parset")]
	public partial class AccessLevelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserGroups(UserGroups instance);
    partial void UpdateUserGroups(UserGroups instance);
    partial void DeleteUserGroups(UserGroups instance);
    partial void InsertUserLevel(UserLevel instance);
    partial void UpdateUserLevel(UserLevel instance);
    partial void DeleteUserLevel(UserLevel instance);
    partial void InsertLevel(Level instance);
    partial void UpdateLevel(Level instance);
    partial void DeleteLevel(Level instance);
    partial void InsertGroupResources(GroupResources instance);
    partial void UpdateGroupResources(GroupResources instance);
    partial void DeleteGroupResources(GroupResources instance);
    partial void InsertUserLogs(UserLogs instance);
    partial void UpdateUserLogs(UserLogs instance);
    partial void DeleteUserLogs(UserLogs instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertGroupZones(GroupZones instance);
    partial void UpdateGroupZones(GroupZones instance);
    partial void DeleteGroupZones(GroupZones instance);
    partial void InsertAccessGroups(AccessGroups instance);
    partial void UpdateAccessGroups(AccessGroups instance);
    partial void DeleteAccessGroups(AccessGroups instance);
    partial void InsertResources(Resources instance);
    partial void UpdateResources(Resources instance);
    partial void DeleteResources(Resources instance);
    #endregion
		
		public AccessLevelDataContext() : 
				base(global::ParsetCrawler.Properties.Settings.Default.ParsetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccessLevelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccessLevelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccessLevelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccessLevelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserGroups> UserGroups
		{
			get
			{
				return this.GetTable<UserGroups>();
			}
		}
		
		public System.Data.Linq.Table<UserLevel> UserLevels
		{
			get
			{
				return this.GetTable<UserLevel>();
			}
		}
		
		public System.Data.Linq.Table<Level> Levels
		{
			get
			{
				return this.GetTable<Level>();
			}
		}
		
		public System.Data.Linq.Table<GroupResources> GroupResources
		{
			get
			{
				return this.GetTable<GroupResources>();
			}
		}
		
		public System.Data.Linq.Table<vResources> vResources
		{
			get
			{
				return this.GetTable<vResources>();
			}
		}
		
		public System.Data.Linq.Table<vGroupResources> vGroupResources
		{
			get
			{
				return this.GetTable<vGroupResources>();
			}
		}
		
		public System.Data.Linq.Table<vUserLogs> vUserLogs
		{
			get
			{
				return this.GetTable<vUserLogs>();
			}
		}
		
		public System.Data.Linq.Table<UserLogs> UserLogs
		{
			get
			{
				return this.GetTable<UserLogs>();
			}
		}
		
		public System.Data.Linq.Table<vAccessGroups> vAccessGroups
		{
			get
			{
				return this.GetTable<vAccessGroups>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<GroupZones> GroupZones
		{
			get
			{
				return this.GetTable<GroupZones>();
			}
		}
		
		public System.Data.Linq.Table<vGroupZones> vGroupZones
		{
			get
			{
				return this.GetTable<vGroupZones>();
			}
		}
		
		public System.Data.Linq.Table<vUsers> vUsers
		{
			get
			{
				return this.GetTable<vUsers>();
			}
		}
		
		public System.Data.Linq.Table<AccessGroups> AccessGroups
		{
			get
			{
				return this.GetTable<AccessGroups>();
			}
		}
		
		public System.Data.Linq.Table<vUserGroups> vUserGroups
		{
			get
			{
				return this.GetTable<vUserGroups>();
			}
		}
		
		public System.Data.Linq.Table<Resources> Resources
		{
			get
			{
				return this.GetTable<Resources>();
			}
		}
		
		public System.Data.Linq.Table<vUserAccess> vUserAccesses
		{
			get
			{
				return this.GetTable<vUserAccess>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMultipleAccess")]
		public ISingleResult<sp_GetMultipleAccessResult> sp_GetMultipleAccess([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paramAccessTypeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paramGroupCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paramMasterCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), paramAccessTypeCode, paramGroupCode, paramMasterCode);
			return ((ISingleResult<sp_GetMultipleAccessResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroups")]
	public partial class UserGroups : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private System.Nullable<int> _UserCode;
		
		private System.Nullable<int> _GroupCode;
		
		private EntityRef<Users> _Users;
		
		private EntityRef<AccessGroups> _AccessGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnUserCodeChanging(System.Nullable<int> value);
    partial void OnUserCodeChanged();
    partial void OnGroupCodeChanging(System.Nullable<int> value);
    partial void OnGroupCodeChanged();
    #endregion
		
		public UserGroups()
		{
			this._Users = default(EntityRef<Users>);
			this._AccessGroups = default(EntityRef<AccessGroups>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="Int")]
		public System.Nullable<int> UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="Int")]
		public System.Nullable<int> GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					if (this._AccessGroups.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserGroups", Storage="_Users", ThisKey="UserCode", OtherKey="Code", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.UserGroups.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.UserGroups.Add(this);
						this._UserCode = value.Code;
					}
					else
					{
						this._UserCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessGroups_UserGroups", Storage="_AccessGroups", ThisKey="GroupCode", OtherKey="Code", IsForeignKey=true)]
		public AccessGroups AccessGroups
		{
			get
			{
				return this._AccessGroups.Entity;
			}
			set
			{
				AccessGroups previousValue = this._AccessGroups.Entity;
				if (((previousValue != value) 
							|| (this._AccessGroups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccessGroups.Entity = null;
						previousValue.UserGroups.Remove(this);
					}
					this._AccessGroups.Entity = value;
					if ((value != null))
					{
						value.UserGroups.Add(this);
						this._GroupCode = value.Code;
					}
					else
					{
						this._GroupCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccessGroups");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLevels")]
	public partial class UserLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private System.Nullable<int> _UserCode;
		
		private System.Nullable<int> _LevelCode;
		
		private EntityRef<Level> _Level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnUserCodeChanging(System.Nullable<int> value);
    partial void OnUserCodeChanged();
    partial void OnLevelCodeChanging(System.Nullable<int> value);
    partial void OnLevelCodeChanged();
    #endregion
		
		public UserLevel()
		{
			this._Level = default(EntityRef<Level>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="Int")]
		public System.Nullable<int> UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelCode", DbType="Int")]
		public System.Nullable<int> LevelCode
		{
			get
			{
				return this._LevelCode;
			}
			set
			{
				if ((this._LevelCode != value))
				{
					if (this._Level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelCodeChanging(value);
					this.SendPropertyChanging();
					this._LevelCode = value;
					this.SendPropertyChanged("LevelCode");
					this.OnLevelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_UserLevel", Storage="_Level", ThisKey="LevelCode", OtherKey="Code", IsForeignKey=true)]
		public Level Level
		{
			get
			{
				return this._Level.Entity;
			}
			set
			{
				Level previousValue = this._Level.Entity;
				if (((previousValue != value) 
							|| (this._Level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Level.Entity = null;
						previousValue.UserLevels.Remove(this);
					}
					this._Level.Entity = value;
					if ((value != null))
					{
						value.UserLevels.Add(this);
						this._LevelCode = value.Code;
					}
					else
					{
						this._LevelCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Level");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Levels")]
	public partial class Level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Name;
		
		private EntitySet<UserLevel> _UserLevels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Level()
		{
			this._UserLevels = new EntitySet<UserLevel>(new Action<UserLevel>(this.attach_UserLevels), new Action<UserLevel>(this.detach_UserLevels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_UserLevel", Storage="_UserLevels", ThisKey="Code", OtherKey="LevelCode")]
		public EntitySet<UserLevel> UserLevels
		{
			get
			{
				return this._UserLevels;
			}
			set
			{
				this._UserLevels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserLevels(UserLevel entity)
		{
			this.SendPropertyChanging();
			entity.Level = this;
		}
		
		private void detach_UserLevels(UserLevel entity)
		{
			this.SendPropertyChanging();
			entity.Level = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupResources")]
	public partial class GroupResources : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private System.Nullable<int> _GroupCode;
		
		private System.Nullable<int> _ResourceCode;
		
		private System.Nullable<int> _AccessType;
		
		private EntityRef<AccessGroups> _AccessGroups;
		
		private EntityRef<Resources> _Resources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnGroupCodeChanging(System.Nullable<int> value);
    partial void OnGroupCodeChanged();
    partial void OnResourceCodeChanging(System.Nullable<int> value);
    partial void OnResourceCodeChanged();
    partial void OnAccessTypeChanging(System.Nullable<int> value);
    partial void OnAccessTypeChanged();
    #endregion
		
		public GroupResources()
		{
			this._AccessGroups = default(EntityRef<AccessGroups>);
			this._Resources = default(EntityRef<Resources>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="Int")]
		public System.Nullable<int> GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					if (this._AccessGroups.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceCode", DbType="Int")]
		public System.Nullable<int> ResourceCode
		{
			get
			{
				return this._ResourceCode;
			}
			set
			{
				if ((this._ResourceCode != value))
				{
					if (this._Resources.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceCodeChanging(value);
					this.SendPropertyChanging();
					this._ResourceCode = value;
					this.SendPropertyChanged("ResourceCode");
					this.OnResourceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="Int")]
		public System.Nullable<int> AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this.OnAccessTypeChanging(value);
					this.SendPropertyChanging();
					this._AccessType = value;
					this.SendPropertyChanged("AccessType");
					this.OnAccessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessGroups_GroupResources", Storage="_AccessGroups", ThisKey="GroupCode", OtherKey="Code", IsForeignKey=true)]
		public AccessGroups AccessGroups
		{
			get
			{
				return this._AccessGroups.Entity;
			}
			set
			{
				AccessGroups previousValue = this._AccessGroups.Entity;
				if (((previousValue != value) 
							|| (this._AccessGroups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccessGroups.Entity = null;
						previousValue.GroupResources.Remove(this);
					}
					this._AccessGroups.Entity = value;
					if ((value != null))
					{
						value.GroupResources.Add(this);
						this._GroupCode = value.Code;
					}
					else
					{
						this._GroupCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccessGroups");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resources_GroupResources", Storage="_Resources", ThisKey="ResourceCode", OtherKey="Code", IsForeignKey=true, DeleteRule="CASCADE")]
		public Resources Resources
		{
			get
			{
				return this._Resources.Entity;
			}
			set
			{
				Resources previousValue = this._Resources.Entity;
				if (((previousValue != value) 
							|| (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resources.Entity = null;
						previousValue.GroupResources.Remove(this);
					}
					this._Resources.Entity = value;
					if ((value != null))
					{
						value.GroupResources.Add(this);
						this._ResourceCode = value.Code;
					}
					else
					{
						this._ResourceCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Resources");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vResources")]
	public partial class vResources
	{
		
		private int _Code;
		
		private string _Name;
		
		private string _EngName;
		
		private string _BaseID;
		
		private System.Nullable<int> _MasterCode;
		
		public vResources()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngName", DbType="NVarChar(500)")]
		public string EngName
		{
			get
			{
				return this._EngName;
			}
			set
			{
				if ((this._EngName != value))
				{
					this._EngName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseID", DbType="VarChar(100)")]
		public string BaseID
		{
			get
			{
				return this._BaseID;
			}
			set
			{
				if ((this._BaseID != value))
				{
					this._BaseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterCode", DbType="Int")]
		public System.Nullable<int> MasterCode
		{
			get
			{
				return this._MasterCode;
			}
			set
			{
				if ((this._MasterCode != value))
				{
					this._MasterCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vGroupResources")]
	public partial class vGroupResources
	{
		
		private int _Code;
		
		private System.Nullable<int> _GroupCode;
		
		private string _ResourceName;
		
		private System.Nullable<int> _ResourceCode;
		
		private System.Nullable<int> _AccessType;
		
		public vGroupResources()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="Int")]
		public System.Nullable<int> GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this._GroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceName", DbType="NVarChar(500)")]
		public string ResourceName
		{
			get
			{
				return this._ResourceName;
			}
			set
			{
				if ((this._ResourceName != value))
				{
					this._ResourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceCode", DbType="Int")]
		public System.Nullable<int> ResourceCode
		{
			get
			{
				return this._ResourceCode;
			}
			set
			{
				if ((this._ResourceCode != value))
				{
					this._ResourceCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="Int")]
		public System.Nullable<int> AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this._AccessType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vUserLogs")]
	public partial class vUserLogs
	{
		
		private int _Code;
		
		private int _UserCode;
		
		private string _Entity;
		
		private string _Action;
		
		private string _ActDate;
		
		private string _ActTime;
		
		public vUserLogs()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="Int NOT NULL")]
		public int UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity", DbType="NVarChar(500)")]
		public string Entity
		{
			get
			{
				return this._Entity;
			}
			set
			{
				if ((this._Entity != value))
				{
					this._Entity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActDate", DbType="VarChar(10)")]
		public string ActDate
		{
			get
			{
				return this._ActDate;
			}
			set
			{
				if ((this._ActDate != value))
				{
					this._ActDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActTime", DbType="VarChar(5)")]
		public string ActTime
		{
			get
			{
				return this._ActTime;
			}
			set
			{
				if ((this._ActTime != value))
				{
					this._ActTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogs")]
	public partial class UserLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private int _UserCode;
		
		private int _EntityCode;
		
		private int _HCEntityTypeCode;
		
		private int _HCUserActionCode;
		
		private System.DateTime _ActionDate;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnUserCodeChanging(int value);
    partial void OnUserCodeChanged();
    partial void OnEntityCodeChanging(int value);
    partial void OnEntityCodeChanged();
    partial void OnHCEntityTypeCodeChanging(int value);
    partial void OnHCEntityTypeCodeChanged();
    partial void OnHCUserActionCodeChanging(int value);
    partial void OnHCUserActionCodeChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public UserLogs()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="Int NOT NULL")]
		public int UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityCode", DbType="Int NOT NULL")]
		public int EntityCode
		{
			get
			{
				return this._EntityCode;
			}
			set
			{
				if ((this._EntityCode != value))
				{
					this.OnEntityCodeChanging(value);
					this.SendPropertyChanging();
					this._EntityCode = value;
					this.SendPropertyChanged("EntityCode");
					this.OnEntityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCEntityTypeCode", DbType="Int NOT NULL")]
		public int HCEntityTypeCode
		{
			get
			{
				return this._HCEntityTypeCode;
			}
			set
			{
				if ((this._HCEntityTypeCode != value))
				{
					this.OnHCEntityTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._HCEntityTypeCode = value;
					this.SendPropertyChanged("HCEntityTypeCode");
					this.OnHCEntityTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCUserActionCode", DbType="Int NOT NULL")]
		public int HCUserActionCode
		{
			get
			{
				return this._HCUserActionCode;
			}
			set
			{
				if ((this._HCUserActionCode != value))
				{
					this.OnHCUserActionCodeChanging(value);
					this.SendPropertyChanging();
					this._HCUserActionCode = value;
					this.SendPropertyChanged("HCUserActionCode");
					this.OnHCUserActionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserLogs", Storage="_Users", ThisKey="UserCode", OtherKey="Code", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.UserLogs.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.UserLogs.Add(this);
						this._UserCode = value.Code;
					}
					else
					{
						this._UserCode = default(int);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vAccessGroups")]
	public partial class vAccessGroups
	{
		
		private int _Code;
		
		private string _Name;
		
		private string _LevelName;
		
		public vAccessGroups()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelName", DbType="NVarChar(500)")]
		public string LevelName
		{
			get
			{
				return this._LevelName;
			}
			set
			{
				if ((this._LevelName != value))
				{
					this._LevelName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<bool> _Active;
		
		private string _DockState;
		
		private EntitySet<UserGroups> _UserGroups;
		
		private EntitySet<UserLogs> _UserLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDockStateChanging(string value);
    partial void OnDockStateChanged();
    #endregion
		
		public Users()
		{
			this._UserGroups = new EntitySet<UserGroups>(new Action<UserGroups>(this.attach_UserGroups), new Action<UserGroups>(this.detach_UserGroups));
			this._UserLogs = new EntitySet<UserLogs>(new Action<UserLogs>(this.attach_UserLogs), new Action<UserLogs>(this.detach_UserLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DockState", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DockState
		{
			get
			{
				return this._DockState;
			}
			set
			{
				if ((this._DockState != value))
				{
					this.OnDockStateChanging(value);
					this.SendPropertyChanging();
					this._DockState = value;
					this.SendPropertyChanged("DockState");
					this.OnDockStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserGroups", Storage="_UserGroups", ThisKey="Code", OtherKey="UserCode")]
		public EntitySet<UserGroups> UserGroups
		{
			get
			{
				return this._UserGroups;
			}
			set
			{
				this._UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserLogs", Storage="_UserLogs", ThisKey="Code", OtherKey="UserCode")]
		public EntitySet<UserLogs> UserLogs
		{
			get
			{
				return this._UserLogs;
			}
			set
			{
				this._UserLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserGroups(UserGroups entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_UserGroups(UserGroups entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_UserLogs(UserLogs entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_UserLogs(UserLogs entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupZones")]
	public partial class GroupZones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private System.Nullable<int> _GroupCode;
		
		private System.Nullable<int> _ZoneCode;
		
		private EntityRef<AccessGroups> _AccessGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnGroupCodeChanging(System.Nullable<int> value);
    partial void OnGroupCodeChanged();
    partial void OnZoneCodeChanging(System.Nullable<int> value);
    partial void OnZoneCodeChanged();
    #endregion
		
		public GroupZones()
		{
			this._AccessGroups = default(EntityRef<AccessGroups>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="Int")]
		public System.Nullable<int> GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					if (this._AccessGroups.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneCode", DbType="Int")]
		public System.Nullable<int> ZoneCode
		{
			get
			{
				return this._ZoneCode;
			}
			set
			{
				if ((this._ZoneCode != value))
				{
					this.OnZoneCodeChanging(value);
					this.SendPropertyChanging();
					this._ZoneCode = value;
					this.SendPropertyChanged("ZoneCode");
					this.OnZoneCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessGroups_GroupZones", Storage="_AccessGroups", ThisKey="GroupCode", OtherKey="Code", IsForeignKey=true)]
		public AccessGroups AccessGroups
		{
			get
			{
				return this._AccessGroups.Entity;
			}
			set
			{
				AccessGroups previousValue = this._AccessGroups.Entity;
				if (((previousValue != value) 
							|| (this._AccessGroups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccessGroups.Entity = null;
						previousValue.GroupZones.Remove(this);
					}
					this._AccessGroups.Entity = value;
					if ((value != null))
					{
						value.GroupZones.Add(this);
						this._GroupCode = value.Code;
					}
					else
					{
						this._GroupCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccessGroups");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vGroupZones")]
	public partial class vGroupZones
	{
		
		private int _Code;
		
		private System.Nullable<int> _GroupCode;
		
		private string _Name;
		
		public vGroupZones()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="Int")]
		public System.Nullable<int> GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this._GroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vUsers")]
	public partial class vUsers
	{
		
		private int _Code;
		
		private string _FullName;
		
		private string _Username;
		
		private string _Activity;
		
		public vUsers()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(201)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this._Activity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessGroups")]
	public partial class AccessGroups : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Name;
		
		private System.Nullable<int> _HCLevelCode;
		
		private System.Nullable<int> _IGroupCode;
		
		private EntitySet<UserGroups> _UserGroups;
		
		private EntitySet<GroupResources> _GroupResources;
		
		private EntitySet<GroupZones> _GroupZones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHCLevelCodeChanging(System.Nullable<int> value);
    partial void OnHCLevelCodeChanged();
    partial void OnIGroupCodeChanging(System.Nullable<int> value);
    partial void OnIGroupCodeChanged();
    #endregion
		
		public AccessGroups()
		{
			this._UserGroups = new EntitySet<UserGroups>(new Action<UserGroups>(this.attach_UserGroups), new Action<UserGroups>(this.detach_UserGroups));
			this._GroupResources = new EntitySet<GroupResources>(new Action<GroupResources>(this.attach_GroupResources), new Action<GroupResources>(this.detach_GroupResources));
			this._GroupZones = new EntitySet<GroupZones>(new Action<GroupZones>(this.attach_GroupZones), new Action<GroupZones>(this.detach_GroupZones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCLevelCode", DbType="Int")]
		public System.Nullable<int> HCLevelCode
		{
			get
			{
				return this._HCLevelCode;
			}
			set
			{
				if ((this._HCLevelCode != value))
				{
					this.OnHCLevelCodeChanging(value);
					this.SendPropertyChanging();
					this._HCLevelCode = value;
					this.SendPropertyChanged("HCLevelCode");
					this.OnHCLevelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGroupCode", DbType="Int")]
		public System.Nullable<int> IGroupCode
		{
			get
			{
				return this._IGroupCode;
			}
			set
			{
				if ((this._IGroupCode != value))
				{
					this.OnIGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._IGroupCode = value;
					this.SendPropertyChanged("IGroupCode");
					this.OnIGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessGroups_UserGroups", Storage="_UserGroups", ThisKey="Code", OtherKey="GroupCode")]
		public EntitySet<UserGroups> UserGroups
		{
			get
			{
				return this._UserGroups;
			}
			set
			{
				this._UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessGroups_GroupResources", Storage="_GroupResources", ThisKey="Code", OtherKey="GroupCode")]
		public EntitySet<GroupResources> GroupResources
		{
			get
			{
				return this._GroupResources;
			}
			set
			{
				this._GroupResources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessGroups_GroupZones", Storage="_GroupZones", ThisKey="Code", OtherKey="GroupCode")]
		public EntitySet<GroupZones> GroupZones
		{
			get
			{
				return this._GroupZones;
			}
			set
			{
				this._GroupZones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserGroups(UserGroups entity)
		{
			this.SendPropertyChanging();
			entity.AccessGroups = this;
		}
		
		private void detach_UserGroups(UserGroups entity)
		{
			this.SendPropertyChanging();
			entity.AccessGroups = null;
		}
		
		private void attach_GroupResources(GroupResources entity)
		{
			this.SendPropertyChanging();
			entity.AccessGroups = this;
		}
		
		private void detach_GroupResources(GroupResources entity)
		{
			this.SendPropertyChanging();
			entity.AccessGroups = null;
		}
		
		private void attach_GroupZones(GroupZones entity)
		{
			this.SendPropertyChanging();
			entity.AccessGroups = this;
		}
		
		private void detach_GroupZones(GroupZones entity)
		{
			this.SendPropertyChanging();
			entity.AccessGroups = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vUserGroups")]
	public partial class vUserGroups
	{
		
		private int _Code;
		
		private System.Nullable<int> _UserCode;
		
		private System.Nullable<int> _GroupCode;
		
		private string _GroupName;
		
		private System.Nullable<int> _IGroupCode;
		
		public vUserGroups()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="Int")]
		public System.Nullable<int> UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="Int")]
		public System.Nullable<int> GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this._GroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGroupCode", DbType="Int")]
		public System.Nullable<int> IGroupCode
		{
			get
			{
				return this._IGroupCode;
			}
			set
			{
				if ((this._IGroupCode != value))
				{
					this._IGroupCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resources")]
	public partial class Resources : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Name;
		
		private string _EngName;
		
		private System.Nullable<int> _TypeCode;
		
		private System.Nullable<int> _MasterCode;
		
		private string _EditPath;
		
		private string _BaseID;
		
		private System.Nullable<int> _BasicAccessType;
		
		private string _ResName;
		
		private System.Nullable<int> _Ordering;
		
		private EntitySet<GroupResources> _GroupResources;
		
		private EntitySet<Resources> _Resources1;
		
		private EntityRef<Resources> _Resource1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEngNameChanging(string value);
    partial void OnEngNameChanged();
    partial void OnTypeCodeChanging(System.Nullable<int> value);
    partial void OnTypeCodeChanged();
    partial void OnMasterCodeChanging(System.Nullable<int> value);
    partial void OnMasterCodeChanged();
    partial void OnEditPathChanging(string value);
    partial void OnEditPathChanged();
    partial void OnBaseIDChanging(string value);
    partial void OnBaseIDChanged();
    partial void OnBasicAccessTypeChanging(System.Nullable<int> value);
    partial void OnBasicAccessTypeChanged();
    partial void OnResNameChanging(string value);
    partial void OnResNameChanged();
    partial void OnOrderingChanging(System.Nullable<int> value);
    partial void OnOrderingChanged();
    #endregion
		
		public Resources()
		{
			this._GroupResources = new EntitySet<GroupResources>(new Action<GroupResources>(this.attach_GroupResources), new Action<GroupResources>(this.detach_GroupResources));
			this._Resources1 = new EntitySet<Resources>(new Action<Resources>(this.attach_Resources1), new Action<Resources>(this.detach_Resources1));
			this._Resource1 = default(EntityRef<Resources>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngName", DbType="NVarChar(500)")]
		public string EngName
		{
			get
			{
				return this._EngName;
			}
			set
			{
				if ((this._EngName != value))
				{
					this.OnEngNameChanging(value);
					this.SendPropertyChanging();
					this._EngName = value;
					this.SendPropertyChanged("EngName");
					this.OnEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="Int")]
		public System.Nullable<int> TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterCode", DbType="Int")]
		public System.Nullable<int> MasterCode
		{
			get
			{
				return this._MasterCode;
			}
			set
			{
				if ((this._MasterCode != value))
				{
					if (this._Resource1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterCodeChanging(value);
					this.SendPropertyChanging();
					this._MasterCode = value;
					this.SendPropertyChanged("MasterCode");
					this.OnMasterCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditPath", DbType="VarChar(200)")]
		public string EditPath
		{
			get
			{
				return this._EditPath;
			}
			set
			{
				if ((this._EditPath != value))
				{
					this.OnEditPathChanging(value);
					this.SendPropertyChanging();
					this._EditPath = value;
					this.SendPropertyChanged("EditPath");
					this.OnEditPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseID", DbType="VarChar(100)")]
		public string BaseID
		{
			get
			{
				return this._BaseID;
			}
			set
			{
				if ((this._BaseID != value))
				{
					this.OnBaseIDChanging(value);
					this.SendPropertyChanging();
					this._BaseID = value;
					this.SendPropertyChanged("BaseID");
					this.OnBaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicAccessType", DbType="Int")]
		public System.Nullable<int> BasicAccessType
		{
			get
			{
				return this._BasicAccessType;
			}
			set
			{
				if ((this._BasicAccessType != value))
				{
					this.OnBasicAccessTypeChanging(value);
					this.SendPropertyChanging();
					this._BasicAccessType = value;
					this.SendPropertyChanged("BasicAccessType");
					this.OnBasicAccessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResName", DbType="VarChar(100)")]
		public string ResName
		{
			get
			{
				return this._ResName;
			}
			set
			{
				if ((this._ResName != value))
				{
					this.OnResNameChanging(value);
					this.SendPropertyChanging();
					this._ResName = value;
					this.SendPropertyChanged("ResName");
					this.OnResNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordering", DbType="Int")]
		public System.Nullable<int> Ordering
		{
			get
			{
				return this._Ordering;
			}
			set
			{
				if ((this._Ordering != value))
				{
					this.OnOrderingChanging(value);
					this.SendPropertyChanging();
					this._Ordering = value;
					this.SendPropertyChanged("Ordering");
					this.OnOrderingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resources_GroupResources", Storage="_GroupResources", ThisKey="Code", OtherKey="ResourceCode")]
		public EntitySet<GroupResources> GroupResources
		{
			get
			{
				return this._GroupResources;
			}
			set
			{
				this._GroupResources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resources_Resources", Storage="_Resources1", ThisKey="Code", OtherKey="MasterCode")]
		public EntitySet<Resources> Resources1
		{
			get
			{
				return this._Resources1;
			}
			set
			{
				this._Resources1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resources_Resources", Storage="_Resource1", ThisKey="MasterCode", OtherKey="Code", IsForeignKey=true)]
		public Resources Resource1
		{
			get
			{
				return this._Resource1.Entity;
			}
			set
			{
				Resources previousValue = this._Resource1.Entity;
				if (((previousValue != value) 
							|| (this._Resource1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource1.Entity = null;
						previousValue.Resources1.Remove(this);
					}
					this._Resource1.Entity = value;
					if ((value != null))
					{
						value.Resources1.Add(this);
						this._MasterCode = value.Code;
					}
					else
					{
						this._MasterCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Resource1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupResources(GroupResources entity)
		{
			this.SendPropertyChanging();
			entity.Resources = this;
		}
		
		private void detach_GroupResources(GroupResources entity)
		{
			this.SendPropertyChanging();
			entity.Resources = null;
		}
		
		private void attach_Resources1(Resources entity)
		{
			this.SendPropertyChanging();
			entity.Resource1 = this;
		}
		
		private void detach_Resources1(Resources entity)
		{
			this.SendPropertyChanging();
			entity.Resource1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vUserAccess")]
	public partial class vUserAccess
	{
		
		private System.Nullable<int> _UserCode;
		
		private string _Name;
		
		private System.Nullable<int> _AccessType;
		
		private string _ResName;
		
		private System.Nullable<int> _HCLevelCode;
		
		private System.Nullable<int> _TypeCode;
		
		private System.Nullable<int> _Ordering;
		
		public vUserAccess()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="Int")]
		public System.Nullable<int> UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="Int")]
		public System.Nullable<int> AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this._AccessType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResName", DbType="VarChar(100)")]
		public string ResName
		{
			get
			{
				return this._ResName;
			}
			set
			{
				if ((this._ResName != value))
				{
					this._ResName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCLevelCode", DbType="Int")]
		public System.Nullable<int> HCLevelCode
		{
			get
			{
				return this._HCLevelCode;
			}
			set
			{
				if ((this._HCLevelCode != value))
				{
					this._HCLevelCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="Int")]
		public System.Nullable<int> TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this._TypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordering", DbType="Int")]
		public System.Nullable<int> Ordering
		{
			get
			{
				return this._Ordering;
			}
			set
			{
				if ((this._Ordering != value))
				{
					this._Ordering = value;
				}
			}
		}
	}
	
	public partial class sp_GetMultipleAccessResult
	{
		
		private System.Nullable<int> _GroupCode;
		
		private int _ResourceCode;
		
		public sp_GetMultipleAccessResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="Int")]
		public System.Nullable<int> GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this._GroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceCode", DbType="Int NOT NULL")]
		public int ResourceCode
		{
			get
			{
				return this._ResourceCode;
			}
			set
			{
				if ((this._ResourceCode != value))
				{
					this._ResourceCode = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
